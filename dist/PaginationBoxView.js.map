{"version":3,"sources":["../react_components/PaginationBoxView.js"],"names":["PaginationBoxView","props","handlePreviousPage","selected","state","evt","preventDefault","returnValue","initialSelected","handlePageSelected","handleNextPage","pageCount","indexByOne","setState","callCallback","handleBreakClick","index","getForwardJump","getBackwardJump","onPageChange","selectedItem","pagination","items","pageRangeDisplayed","marginPagesDisplayed","breakLabel","breakClassName","breakLinkClassName","lastPage","push","getPageElement","leftSide","rightSide","page","breakView","createPageView","length","bind","initialPage","forcePage","disableInitialCallback","extraAriaContext","console","warn","nextProps","forwardJump","backwardJump","pageIndex","hrefBuilder","ariaLabelBuilder","label","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","disabledClassName","previousClassName","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","Component","propTypes","PropTypes","number","isRequired","node","oneOfType","string","func","bool","defaultProps"],"mappings":"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","file":"PaginationBoxView.js","sourcesContent":["'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    nextLabel: PropTypes.node,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n    indexByOne: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousClassName: 'previous',\n    nextClassName: 'next',\n    previousLabel: 'Previous',\n    nextLabel: 'Next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n    indexByOne: false,\n  };\n  \n  constructor(props) {\n    super(props);\n\n    this.initialSelected = 0;\n    if (props.initialPage) {\n      this.initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      this.initialSelected = props.forcePage;\n    } else {\n      this.initialSelected = props.indexByOne ? 1 : 0;\n    }\n\n    this.state = {\n      selected: this.initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      typeof nextProps.forcePage !== 'undefined' &&\n      this.props.forcePage !== nextProps.forcePage\n    ) {\n      this.setState({ selected: nextProps.forcePage });\n    }\n  }\n\n  handlePreviousPage = evt => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > this.initialSelected) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    const { selected } = this.state;\n    const { pageCount, indexByOne } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < (indexByOne ? pageCount : pageCount - 1)) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount, indexByOne } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= this.initialSelected &&\n      pageIndex < (indexByOne ? pageCount + 1 : pageCount)\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = selectedItem => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n      indexByOne,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        onClick={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={indexByOne ? index : index + 1}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n      indexByOne,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      const lastPage = indexByOne ? pageCount + 1 : pageCount;\n      for (let index = this.initialSelected; index < lastPage; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = index => this.getPageElement(index);\n      const lastPage = indexByOne ? pageCount + 1 : pageCount;\n      for (index = this.initialSelected; index < lastPage; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              onClick={this.handleBreakClick.bind(null, index)}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      previousClassName,\n      nextClassName,\n      pageCount,\n      containerClassName,\n      previousLinkClassName,\n      previousLabel,\n      nextLinkClassName,\n      nextLabel,\n      indexByOne,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName +\n      (selected === this.initialSelected ? ` ${disabledClassName}` : '');\n    const nextClasses = nextClassName + (selected === (indexByOne ? pageCount : pageCount - 1) ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            onClick={this.handlePreviousPage}\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            onClick={this.handleNextPage}\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n"]}